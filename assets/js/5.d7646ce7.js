(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{165:function(a,t,e){"use strict";e.r(t);var n=e(0),s=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"cli-usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cli-usage","aria-hidden":"true"}},[a._v("#")]),a._v(" CLI Usage")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("vue-translation-manager [command]\n\nCommands:\n  vue-translation-manager translate     Translate vue files in path\n  vue-translation-manager clean         Remove unused translations from\n                                        translations resource\n  vue-translation-manager add [key]     Add a new translation to the resource\n                                        file(s)\n  vue-translation-manager edit [key]    Edit an existing translation\n  vue-translation-manager delete [key]  Delete an existing translation\n\nOptions:\n  --help     Show help                                                 [boolean]\n  --version  Show version number                                       [boolean]\n")])])]),e("h2",{attrs:{id:"translate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#translate","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("translate")])]),a._v(" "),e("p",[a._v("This command starts the interactive translation manager. It looks through all the "),e("code",[a._v(".vue")]),a._v(" files\ninside your configured "),e("code",[a._v("srcPath")]),a._v(" and detects untranslated strings.")]),a._v(" "),e("p",[a._v("In an interactive way you then can provide translations for all the configured languages and\nthe strings in the component will get replaced and the translations saved. You can repeat\nthis as long as there are untranslated strings in at least one of your components.")]),a._v(" "),e("p",[a._v("Optionally you can pass the "),e("code",[a._v("--ask-key")]),a._v(" parameter. Per default we generate a key for every\nuntranslated string based on where it occurs and on the string itself. If you don't want this\nyou should provide the mentioned parameter and it will ask you to provide a key for every\nstring to translate. If you are content with the default string then just hit "),e("code",[a._v("enter")]),a._v(". You can\nalso enter a complete new key, separated by dots, or just enter a single word. Then it will\njust replace the last part of the suggested key.")]),a._v(" "),e("h2",{attrs:{id:"clean"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clean","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("clean")])]),a._v(" "),e("p",[a._v("This command looks at all the translations in your configured translation files and searches\nfor their usages inside your "),e("code",[a._v(".vue")]),a._v(" components. It presents you with all the keys it didn't\nfind a usage for and gives you a choice to either delete them, keep them or ask for every single\none. Please be aware that we cannot track every possible usage, so take care what you delete.")]),a._v(" "),e("p",[a._v("An example where we can not track that the key "),e("code",[a._v("global.languages.en")]),a._v(" is still being used:")]),a._v(" "),e("div",{staticClass:"language-vue extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[a._v("<")]),a._v("a")]),a._v(" "),e("span",{attrs:{class:"token attr-name"}},[a._v("v-for")]),e("span",{attrs:{class:"token attr-value"}},[e("span",{attrs:{class:"token punctuation"}},[a._v("=")]),e("span",{attrs:{class:"token punctuation"}},[a._v('"')]),a._v("language in languages"),e("span",{attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),e("span",{attrs:{class:"token attr-name"}},[a._v(":key")]),e("span",{attrs:{class:"token attr-value"}},[e("span",{attrs:{class:"token punctuation"}},[a._v("=")]),e("span",{attrs:{class:"token punctuation"}},[a._v('"')]),a._v("language"),e("span",{attrs:{class:"token punctuation"}},[a._v('"')])]),e("span",{attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  {{ $t(`global.languages.${language}`) }}\n"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[a._v("</")]),a._v("a")]),e("span",{attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),e("h2",{attrs:{id:"add-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add-key","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("add [key]")])]),a._v(" "),e("p",[a._v("Add translations for a new key. It will ask you to provide the translations for all your\nconfigured languages and stores them in your translation file(s).")]),a._v(" "),e("h2",{attrs:{id:"edit-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#edit-key","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("edit [key]")])]),a._v(" "),e("p",[a._v("Edit an existing key. The command will ask you to provide new translations but suggests the\nexisting ones as default.")]),a._v(" "),e("h2",{attrs:{id:"delete-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#delete-key","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("delete [key]")])]),a._v(" "),e("p",[a._v("Delete the translations for a given key.")])])}],!1,null,null,null);s.options.__file="cli-usage.md";t.default=s.exports}}]);